name: Java CI

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '23'

      - name: Install necessary tools
        run: |
          sudo apt-get update || { echo "Update failed"; exit 1; }
          sudo apt-get install -y curl wget unzip || { echo "Failed to install necessary tools"; exit 1; }

      - name: Install Chrome
        run: |
          # Install Google Chrome
          wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb || { echo "Failed to download Chrome"; exit 1; }
          sudo apt install -y ./google-chrome-stable_current_amd64.deb || { echo "Failed to install Chrome"; exit 1; }
          google-chrome-stable --version || { echo "Chrome installation failed"; exit 1; }

      - name: Install ChromeDriver
        run: |
          # Get the major version of Chrome
          CHROME_VERSION=$(google-chrome-stable --version | grep -oP '\d+' | head -1)
          echo "Detected Chrome major version: $CHROME_VERSION"
    
          # Attempt to get the matching ChromeDriver version
          DRIVER_VERSION=$(curl -sS https://chromedriver.storage.googleapis.com/LATEST_RELEASE_$CHROME_VERSION)
    
          # If no matching driver is found, fall back to the latest available version
          if [ -z "$DRIVER_VERSION" ]; then
            echo "Unable to fetch ChromeDriver version for Chrome version $CHROME_VERSION. Falling back to the latest ChromeDriver."
            DRIVER_VERSION=$(curl -sS https://chromedriver.storage.googleapis.com/LATEST_RELEASE) || { echo "Failed to fetch the latest ChromeDriver"; exit 1; }
          fi
    
          # Check if DRIVER_VERSION is empty, which means the fetch failed
          if [ -z "$DRIVER_VERSION" ]; then
            echo "Error: Unable to fetch ChromeDriver version. Exiting."
            exit 1
          fi
    
          echo "Using ChromeDriver version: $DRIVER_VERSION"
    
          # Download and install the correct ChromeDriver version
          wget https://chromedriver.storage.googleapis.com/$DRIVER_VERSION/chromedriver_linux64.zip || { echo "Failed to download ChromeDriver"; exit 1; }
          unzip chromedriver_linux64.zip || { echo "Failed to unzip ChromeDriver"; exit 1; }
          sudo mv chromedriver /usr/local/bin/chromedriver || { echo "Failed to move ChromeDriver"; exit 1; }
          chromedriver --version

      - name: List files in the directory
        run: ls -la ./OrangeHRM/orangehrm-test

      - name: Build with Maven
        run: mvn clean install
        working-directory: ./OrangeHRM/orangehrm-test

      - name: Run TestNG tests using testng.xml
        working-directory: ./OrangeHRM/orangehrm-test
        run: mvn test -DsuiteXmlFile=src/test/resources/testng.xml

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: Report
          path: test-results
          retention-days: 2
